{"version":3,"sources":["assets/script/player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","url","AudioClip","setJumpAction","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","setInputControl","self","eventManager","addListener","event","EventListener","KEYBOARD","onKeyPressed","keyCode","accLeft","accRight","onKeyReleased","node","onLoad","jumpAction","runAction","xSpeed","update","dt","Math","abs","x"],"mappings":"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","file":"unknown","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        jumpHeight: 0,\n        jumpDuration: 0,\n        maxMoveSpeed: 0,\n        //加速度\n        accel: 0,\n        jumpAudio: {\n            default: null,\n            url: cc.AudioClip\n        }\n    },\n\n    setJumpAction: function() {\n        // 跳跃上升\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut())\n        // 下落\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn())\n        var callback = cc.callFunc(this.playJumpSound, this);\n        // 不断重复\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\n    },\n    playJumpSound: function () {\n        // 调用声音引擎播放声音\n        cc.audioEngine.playEffect(this.jumpAudio, false);\n    },\n\n    setInputControl: function () {\n        var self = this;\n        // 添加键盘事件监听\n        cc.eventManager.addListener({\n            event: cc.EventListener.KEYBOARD,\n            // 有按键按下时，判断是否是我们指定的方向控制键，并设置向对应方向加速\n            onKeyPressed: function(keyCode, event) {\n                switch(keyCode) {\n                    case 37:\n                    self.accLeft = true;\n                    self.accRight = false;\n                    break;\n                    case 39:\n                    self.accLeft = false;\n                    self.accRight = true;\n                    break;\n                }\n            },\n            // 松开按键时，停止向该方向的加速\n            onKeyReleased: function(keyCode, event) {\n                switch(keyCode) {\n                    case 37:\n                    self.accLeft = false;\n                    break;\n                    case 39:\n                    self.accRight = false;\n                    break;\n                }\n            }\n        }, self.node);\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        // 初始化跳跃动作\n        this.jumpAction = this.setJumpAction();\n        this.node.runAction(this.jumpAction);\n\n        // 加速度方向开关\n        this.accLeft = false;\n        this.accRight = false;\n        // 主角当前水平方向速度\n        this.xSpeed = 0;\n\n        // 初始化键盘输入监听\n        this.setInputControl();\n    },\n\n    update: function (dt) {\n        // 根据当前加速度方向每帧更新速度\n        if (this.accLeft) {\n            this.xSpeed -= this.accel * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n        }\n        // 限制主角的速度不能超过最大值\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\n            // if speed reach limit, use max speed with current direction\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n\n        // 根据当前速度更新主角的位置\n        this.node.x += this.xSpeed * dt;\n    },\n});\n"]}