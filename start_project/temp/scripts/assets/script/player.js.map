{"version":3,"sources":["assets\\script\\player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","setJumpAction","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","repeatForever","sequence","setInputControl","self","eventManager","addListener","event","EventListener","KEYBOARD","onKeyPressed","keyCode","accLeft","accRight","onKeyReleased","node","onLoad","jumpAction","runAction","xSpeed","update","dt","Math","abs","x"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,oBAAY,CADJ;AAERC,sBAAc,CAFN;AAGRC,sBAAc,CAHN;AAIR;AACAC,eAAO;AALC,KAHP;;AAWLC,mBAAe,yBAAW;AACtB;AACA,YAAIC,SAASV,GAAGW,MAAH,CAAU,KAAKL,YAAf,EAA6BN,GAAGY,CAAH,CAAK,CAAL,EAAQ,KAAKP,UAAb,CAA7B,EAAuDQ,MAAvD,CAA8Db,GAAGc,kBAAH,EAA9D,CAAb;AACA;AACA,YAAIC,WAAWf,GAAGW,MAAH,CAAU,KAAKL,YAAf,EAA6BN,GAAGY,CAAH,CAAK,CAAL,EAAQ,CAAC,KAAKP,UAAd,CAA7B,EAAwDQ,MAAxD,CAA+Db,GAAGgB,iBAAH,EAA/D,CAAf;AACA;AACA,eAAOhB,GAAGiB,aAAH,CAAiBjB,GAAGkB,QAAH,CAAYR,MAAZ,EAAoBK,QAApB,CAAjB,CAAP;AACH,KAlBI;;AAoBLI,qBAAiB,2BAAY;AACzB,YAAIC,OAAO,IAAX;AACA;AACApB,WAAGqB,YAAH,CAAgBC,WAAhB,CAA4B;AACxBC,mBAAOvB,GAAGwB,aAAH,CAAiBC,QADA;AAExB;AACAC,0BAAc,sBAASC,OAAT,EAAkBJ,KAAlB,EAAyB;AACnC,wBAAOI,OAAP;AACI,yBAAK,EAAL;AACAP,6BAAKQ,OAAL,GAAe,IAAf;AACAR,6BAAKS,QAAL,GAAgB,KAAhB;AACA;AACA,yBAAK,EAAL;AACAT,6BAAKQ,OAAL,GAAe,KAAf;AACAR,6BAAKS,QAAL,GAAgB,IAAhB;AACA;AARJ;AAUH,aAduB;AAexB;AACAC,2BAAe,uBAASH,OAAT,EAAkBJ,KAAlB,EAAyB;AACpC,wBAAOI,OAAP;AACI,yBAAK,EAAL;AACAP,6BAAKQ,OAAL,GAAe,KAAf;AACA;AACA,yBAAK,EAAL;AACAR,6BAAKS,QAAL,GAAgB,KAAhB;AACA;AANJ;AAQH;AAzBuB,SAA5B,EA0BGT,KAAKW,IA1BR;AA2BH,KAlDI;;AAoDL;AACAC,YAAQ,kBAAY;AAChB;AACA,aAAKC,UAAL,GAAkB,KAAKxB,aAAL,EAAlB;AACA,aAAKsB,IAAL,CAAUG,SAAV,CAAoB,KAAKD,UAAzB;;AAEA;AACA,aAAKL,OAAL,GAAe,KAAf;AACA,aAAKC,QAAL,GAAgB,KAAhB;AACA;AACA,aAAKM,MAAL,GAAc,CAAd;;AAEA;AACA,aAAKhB,eAAL;AACH,KAlEI;;AAoELiB,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA,YAAI,KAAKT,OAAT,EAAkB;AACd,iBAAKO,MAAL,IAAe,KAAK3B,KAAL,GAAa6B,EAA5B;AACH,SAFD,MAEO,IAAI,KAAKR,QAAT,EAAmB;AACtB,iBAAKM,MAAL,IAAe,KAAK3B,KAAL,GAAa6B,EAA5B;AACH;AACD;AACA,YAAKC,KAAKC,GAAL,CAAS,KAAKJ,MAAd,IAAwB,KAAK5B,YAAlC,EAAiD;AAC7C;AACA,iBAAK4B,MAAL,GAAc,KAAK5B,YAAL,GAAoB,KAAK4B,MAAzB,GAAkCG,KAAKC,GAAL,CAAS,KAAKJ,MAAd,CAAhD;AACH;;AAED;AACA,YAAI,KAAKP,OAAL,IAAgB,KAAKC,QAAzB,EAAmC;AAC/B,iBAAKE,IAAL,CAAUS,CAAV,IAAe,KAAKL,MAAL,GAAcE,EAA7B;AACH;AACJ;AArFI,CAAT","file":"unknown","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        jumpHeight: 0,\r\n        jumpDuration: 0,\r\n        maxMoveSpeed: 0,\r\n        //加速度\r\n        accel: 0\r\n    },\r\n\r\n    setJumpAction: function() {\r\n        // 跳跃上升\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut())\r\n        // 下落\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn())\r\n        // 不断重复\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown))\r\n    },\r\n\r\n    setInputControl: function () {\r\n        var self = this;\r\n        // 添加键盘事件监听\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.KEYBOARD,\r\n            // 有按键按下时，判断是否是我们指定的方向控制键，并设置向对应方向加速\r\n            onKeyPressed: function(keyCode, event) {\r\n                switch(keyCode) {\r\n                    case 37:\r\n                    self.accLeft = true;\r\n                    self.accRight = false;\r\n                    break;\r\n                    case 39:\r\n                    self.accLeft = false;\r\n                    self.accRight = true;\r\n                    break;\r\n                }\r\n            },\r\n            // 松开按键时，停止向该方向的加速\r\n            onKeyReleased: function(keyCode, event) {\r\n                switch(keyCode) {\r\n                    case 37:\r\n                    self.accLeft = false;\r\n                    break;\r\n                    case 39:\r\n                    self.accRight = false;\r\n                    break;\r\n                }\r\n            }\r\n        }, self.node);\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        // 初始化跳跃动作\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n\r\n        // 加速度方向开关\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        // 主角当前水平方向速度\r\n        this.xSpeed = 0;\r\n\r\n        // 初始化键盘输入监听\r\n        this.setInputControl();\r\n    },\r\n\r\n    update: function (dt) {\r\n        // 根据当前加速度方向每帧更新速度\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n        // 限制主角的速度不能超过最大值\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n            // if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        // 根据当前速度更新主角的位置\r\n        if( this.accLeft || this.accRight ){\r\n            this.node.x += this.xSpeed * dt;\r\n        }\r\n    },\r\n});\r\n"]}